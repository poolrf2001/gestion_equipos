# Generated by Django 5.1.3 on 2024-12-01 03:19

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Area',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=255)),
                ('ubicacion', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('rol', models.CharField(choices=[('Administrador', 'Administrador'), ('Técnico', 'Técnico'), ('Consultor', 'Consultor')], max_length=50)),
                ('groups', models.ManyToManyField(blank=True, related_name='custom_user_set', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='custom_user_set', to='auth.permission')),
                ('area', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventario.area')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Inventario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_inventario', models.CharField(max_length=50, unique=True)),
                ('categoria', models.CharField(max_length=50)),
                ('marca', models.CharField(max_length=100)),
                ('modelo', models.CharField(max_length=100)),
                ('estado_inventario', models.CharField(choices=[('Presente', 'Presente'), ('Libre', 'Libre'), ('Fuera de Área', 'Fuera de Área'), ('No Habido', 'No Habido')], max_length=50)),
                ('fecha_actualizacion_estado', models.DateTimeField(auto_now=True)),
                ('observaciones', models.TextField(blank=True, null=True)),
                ('codigo_inventario_monitor', models.CharField(blank=True, max_length=50, null=True)),
                ('marca_monitor', models.CharField(blank=True, max_length=100, null=True)),
                ('modelo_monitor', models.CharField(blank=True, max_length=100, null=True)),
                ('area', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventario.area')),
            ],
        ),
        migrations.CreateModel(
            name='Mantenimiento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_mantenimiento', models.DateTimeField()),
                ('tipo_mantenimiento', models.CharField(choices=[('Preventivo', 'Preventivo'), ('Correctivo', 'Correctivo')], max_length=50)),
                ('software_actualizado', models.BooleanField(default=False)),
                ('estado_general', models.CharField(choices=[('Óptimo', 'Óptimo'), ('Bueno', 'Bueno'), ('Regular', 'Regular'), ('Malo', 'Malo')], max_length=50)),
                ('estado_inventario', models.CharField(max_length=50)),
                ('partes_mantenidas', models.TextField(blank=True, null=True)),
                ('problemas_detectados', models.TextField(blank=True, null=True)),
                ('acciones_recomendadas', models.TextField(blank=True, null=True)),
                ('inventario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventario.inventario')),
            ],
        ),
        migrations.CreateModel(
            name='HistorialMantenimiento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_mantenimiento', models.DateTimeField()),
                ('tipo_mantenimiento', models.CharField(max_length=50)),
                ('estado_general', models.CharField(max_length=50)),
                ('estado_inventario', models.CharField(max_length=50)),
                ('problemas_detectados', models.TextField(blank=True, null=True)),
                ('observaciones', models.TextField(blank=True, null=True)),
                ('inventario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventario.inventario')),
                ('mantenimiento', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventario.mantenimiento')),
            ],
        ),
        migrations.CreateModel(
            name='Periferico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_inventario', models.CharField(max_length=50, unique=True)),
                ('tipo', models.CharField(max_length=50)),
                ('marca', models.CharField(max_length=100)),
                ('modelo', models.CharField(max_length=100)),
                ('estado_inventario', models.CharField(choices=[('Presente', 'Presente'), ('Libre', 'Libre'), ('Fuera de Área', 'Fuera de Área'), ('No Habido', 'No Habido')], max_length=50)),
                ('fecha_actualizacion_estado', models.DateTimeField(auto_now=True)),
                ('observaciones', models.TextField(blank=True, null=True)),
                ('area', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventario.area')),
            ],
        ),
        migrations.CreateModel(
            name='RegistroFotografico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('foto_antes', models.ImageField(blank=True, null=True, upload_to='fotos_mantenimiento/')),
                ('foto_despues', models.ImageField(blank=True, null=True, upload_to='fotos_mantenimiento/')),
                ('mantenimiento', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='inventario.mantenimiento')),
            ],
        ),
    ]
